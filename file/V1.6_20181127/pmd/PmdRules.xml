<?xml version="1.0" encoding="UTF-8"?>

<ruleset name="pmd_rules"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
   <description>PMD Plugin preferences rule set</description>
  
	
	
	
	
	<rule name="AbstractNaming"
          language="java"
          since="1.4"
          deprecated="true"
          message="Abstract 类应该命名为：'AbstractXXX'"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
		  ref="category/java/codestyle.xml/AbstractNaming"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#abstractnaming">
        <description>
            抽象类应该命名为  'AbstractXXX'.
        </description>
        <priority>3</priority>
        <properties>
            <property name="strict" type="Boolean" value="false" description="Also flag classes, that are named Abstract, but are not abstract."/>
        </properties>
    </rule>
	
	
	
	
	
	
	

	<rule name="AvoidArrayLoops"
          language="java"
          since="3.5"
          message="使用System.arraycopy 更有效率"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_performance.html#avoidarrayloops"
		  ref="category/java/performance.xml/AvoidArrayLoops">
        <description>
			使用有效的Array.copyOf或System.arraycopy方法代替手动在两个数组之间复制数据。
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	<rule name="AvoidAssertAsIdentifier"
          language="java"
          since="3.4"
          message="避免使用assert作为变量，assert（断言）是JAVA关键字"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#avoidassertasidentifier"
		  ref="category/java/errorprone.xml/AvoidAssertAsIdentifier" >
        <description>
				避免使用assert作为变量，assert（断言）是JAVA关键字
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	

	
	<rule name="AvoidCallingFinalize"
          since="3.0"
          message="避免调用对象的finalize方法，该方法是垃圾回收机制调用的"
          class="net.sourceforge.pmd.lang.java.rule.errorprone.AvoidCallingFinalizeRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#avoidcallingfinalize"
		  ref="category/java/errorprone.xml/AvoidCallingFinalize">
        <description>
			避免调用对象的finalize方法，该方法是垃圾回收机制调用的
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	

	
	
	<rule name="AvoidCatchingNPE"
          language="java"
          since="1.8"
          message="避免捕捉异常的原因，考虑排查空指针的存在"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#avoidcatchingnpe"
		  ref="category/java/errorprone.xml/AvoidCatchingNPE">
        <description>
			在正常情况下不应该手动捕获空指针异常
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	<rule name="AvoidDollarSigns"
          since="1.5"
          message="在变量、方法、类、接口名称中避免出现$符号"
          class="net.sourceforge.pmd.lang.java.rule.codestyle.AvoidDollarSignsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#avoiddollarsigns"
		  ref="category/java/codestyle.xml/AvoidDollarSigns">
        <description>
			在变量、方法、类、接口名称中避免出现$符号
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	

	
	
	<rule name="AvoidEnumAsIdentifier"
          language="java"
          since="3.4"
          message="不能使用enum字样作为变量名，enum是JAVA关键字"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#avoidenumasidentifier"
		  ref="category/java/errorprone.xml/AvoidEnumAsIdentifier">
        <description>
			不能使用enum字样作为变量名，enum是JAVA关键字
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	

	
	<rule name="AvoidFieldNameMatchingTypeName"
          since="3.0"
          message="避免定义与类名相同的变量"
          class="net.sourceforge.pmd.lang.java.rule.errorprone.AvoidFieldNameMatchingTypeNameRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename"
		  ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName" >
        <description>
			有一个字段名与声明类名称匹配，这有点令人困惑。这可能意味着应该更仔细地设置类型和/或字段名称。
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<rule name="AvoidThrowingNullPointerException"
          language="java"
          since="1.8"
          message="避免手动抛出一个NullPointerExceptions."
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_design.html#avoidthrowingnullpointerexception"
		  ref="category/java/design.xml/AvoidThrowingNullPointerException">
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<rule name="BooleanInstantiation"
          since="1.2"
          message="避免通过new实例化一个Boolan类型的对象，你可以直接用Boolean.TRUE，Boolean.FALSE，或者调用Boolean.valueOf()替代."
          class="net.sourceforge.pmd.lang.java.rule.performance.BooleanInstantiationRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_performance.html#booleaninstantiation"
		  ref="category/java/performance.xml/BooleanInstantiation">
        <description>
			避免通过new实例化一个Boolan类型的对象，你可以直接用Boolean.TRUE，Boolean.FALSE，或者调用Boolean.valueOf()替代
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	<rule name="BrokenNullCheck"
          since="3.8"
          message="方法调用的对象可能为null"
          class="net.sourceforge.pmd.lang.java.rule.errorprone.BrokenNullCheckRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#brokennullcheck"
		  ref="category/java/errorprone.xml/BrokenNullCheck" >
        <description>
		空校验被打破，因为它将抛出一个Null PoExtExchange本身。你可能应该用或者代替并且，反之亦然。
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	<rule name="ClassNamingConventions"
          since="1.2"
          message="类名命名请遵循Java命名规范中的大写字母开头，采用驼峰式命名方式"
          class="net.sourceforge.pmd.lang.java.rule.codestyle.ClassNamingConventionsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#classnamingconventions"
		  ref="category/java/codestyle.xml/ClassNamingConventions">
		<properties>
            <property name="utilityClassPattern">
                <value>[A-Z][a-zA-Z0-9]+</value>
            </property>
        </properties>
        <priority>1</priority>
    </rule>

	
	
	
	
	
	
	
	 <rule name="EqualsNull"
          language="java"
          since="1.9"
          message="避免用 equals() 方法来比较对象是否为空"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#equalsnull"
		  ref="category/java/errorprone.xml/EqualsNull" >
        <description>
			判断一个对象是否为空，用== null，而不是Equals(null);
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	<rule name="MethodNamingConventions"
          since="1.2"
          message="方法应该以小写字母开头，且不包含下划线，推荐驼峰式命名(首写字母小写，单词之间第一个字母大写)"
          class="net.sourceforge.pmd.lang.java.rule.codestyle.MethodNamingConventionsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#methodnamingconventions"
		  ref="category/java/codestyle.xml/MethodNamingConventions">
        <description>
            方法应该以小写字母开头，且不包含下划线，推荐驼峰式命名(首写字母小写，单词之间第一个字母大写)
        </description>
        <priority>1</priority>
		<properties>
            <property name="methodPattern">
                <value>[a-z][a-zA-Z0-9_]*</value>
            </property>
        </properties>
      </rule>
	
	
	
	
	
	

	
	<rule name="StringInstantiation"
          since="1.0"
          message="避免去new一个String对象（new String(&quot; aa &quot;)，这是没有必要的"
          class="net.sourceforge.pmd.lang.java.rule.performance.StringInstantiationRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_performance.html#stringinstantiation"
		  ref="category/java/performance.xml/StringInstantiation">
        <description>
			避免去new一个String对象（new String(&quot; aa &quot;)，这是没有必要的
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	<rule name="SuspiciousEqualsMethodName"
          language="java"
          since="2.0"
          message="方法名称和参数个数同对象自身的equals(Object)方法接近，可能被误认为是重写系统的equals(Object)方法"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#suspiciousequalsmethodname"
		  ref="category/java/errorprone.xml/SuspiciousEqualsMethodName">
        <description>
			方法名称和参数个数同对象自身的equals(Object)方法接近，可能被误认为是重写系统的equals(Object)方法        
		</description>
        <priority>1</priority>
    </rule>
	
	
	
	

	
	<rule name="WhileLoopsMustUseBraces"
          language="java"
          since="0.7"
          deprecated="true"
          message="While循环必须使用大括号包含循环体"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#whileloopsmustusebraces"
		  ref="category/java/codestyle.xml/WhileLoopsMustUseBraces">
        <description>
			避免使用“while”语句而不使用大括号来包围代码块。如果代码格式化或缩进丢失，则很难读懂代码
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	

	<rule name="SuspiciousHashcodeMethodName"
          since="1.5"
          message="方法名和返回类型是可疑的接近hashCode(),这可能表示一个打算重写hashCode()方法。"
          class="net.sourceforge.pmd.lang.java.rule.errorprone.SuspiciousHashcodeMethodNameRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#suspicioushashcodemethodname"
		  ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName" >
        <description>
			方法名和返回类型是可疑的接近hashCode(),这可能表示一个打算重写hashCode()方法。
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	

	
	<rule name="BooleanGetMethodName"
          language="java"
          since="4.0"
          message="A 'getX()' method which returns a boolean should be named 'isX()'"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#booleangetmethodname"
		  ref="category/java/codestyle.xml/BooleanGetMethodName">
        <description>
				方法返回布尔结果应该命名为谓词语句来表示。我。e:isReady()、hasValues()、canCommit()、willFail(),等等。避免使用'get'对这些方法的前缀。
        </description>
        <priority>2</priority>
    </rule>
	
	
	
	

	
	 <rule name="GenericsNaming"
          language="java"
          since="4.2.6"
          message="泛型只能用单个大写字母标示"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#genericsnaming"
		  ref="category/java/codestyle.xml/GenericsNaming">
        <description>
				泛型只能用单个大写字母标示
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	

	
	<rule name="PackageCase"
          language="java"
          since="3.3"
          message="包名包含了大写字母"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#packagecase"
		  ref="category/java/codestyle.xml/PackageCase">
        <description>
			包名不能包含大写字母
        </description>
        <priority>2</priority>
    </rule>
	
	
	
	

	
	
	<rule name="MethodWithSameNameAsEnclosingClass"
          since="1.5"
          message="非构造方法名称不能同当前类名相同"
          class="net.sourceforge.pmd.lang.java.rule.errorprone.MethodWithSameNameAsEnclosingClassRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#methodwithsamenameasenclosingclass"
		  ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass">
        <description>
			非构造方法名称不能同当前类名相同
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	

	<rule name="SwitchStmtsShouldHaveDefault"
          language="java"
          since="1.0"
          message="Switch语句分支缺少Default，每一个Switch语句都应该包含一个Default选项"
          typeResolution="true"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault"
		  ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault">
        <description>
			Switch语句分支缺少Default，每一个Switch语句都应该包含一个Default选项
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	<rule name="MissingStaticMethodInNonInstantiatableClass"
          language="java"
          since="3.0"
          message="类不能实例化，并且没有供任何静态方法或字段。"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#missingstaticmethodinnoninstantiatableclass"
		  ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass">
        <description>
			不能使用具有私有构造函数且没有任何静态方法或字段的类。
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	<rule name="NonCaseLabelInSwitchStatement"
          language="java"
          since="1.5"
          message="Switch语句中缺少case标记"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#noncaselabelinswitchstatement"
		  ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement">
        <description>
		Switch语句中缺少case标记
        </description>
        <priority>3</priority>
    </rule>
	
	
	
	
	
	
	
	<rule name="NonThreadSafeSingleton"
          since="3.4"
          message="非线程安全的单利类"
          class="net.sourceforge.pmd.lang.java.rule.multithreading.NonThreadSafeSingletonRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_multithreading.html#nonthreadsafesingleton"
		  ref="category/java/multithreading.xml/NonThreadSafeSingleton">
        <description>
			非线程安全的单利类，非线程安全的单例可能导致多个单例对象，请在获取单例对象的地方加锁防止
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	
	<rule name="SimplifyConditional"
          language="java"
          since="3.1"
          message="在instancOf判断前没必要做null判断,null instanceOf 任何对象都返回false"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_design.html#simplifyconditional"
		  ref="category/java/design.xml/SimplifyConditional">
        <description>
			在instancOf判断前没必要做null判断,null instanceOf 任何对象都返回false
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	<rule name="SingularField"
          since="3.1"
          message="该成员变量只被单一地方使用，可用局部变量代替"
          class="net.sourceforge.pmd.lang.java.rule.design.SingularFieldRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_design.html#singularfield"
		  ref="category/java/design.xml/SingularField">
        <description>
				该成员变量只被单一地方使用，可用局部变量代替        
		</description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	<rule name="CloseResource"
          since="1.2.2"
          message="请确保资源使用后关闭"
          class="net.sourceforge.pmd.lang.java.rule.errorprone.CloseResourceRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#closeresource"
		  ref="category/java/errorprone.xml/CloseResource">
        <description>
			没有关闭连接资源
        </description>
        <priority>1</priority>
    </rule>
	
  
  
  
  
  
  
  
  
  
  
 
  <rule name="CompareObjectsWithEquals"
          since="3.2"
          message="用 equals() 方法做对象的比较."
          class="net.sourceforge.pmd.lang.java.rule.errorprone.CompareObjectsWithEqualsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#compareobjectswithequals"
		  ref="category/java/errorprone.xml/CompareObjectsWithEquals">
        <description>
				用 equals() 方法做对象的比较; 避免比较对象使用 ==.
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
  
  
  
    <rule name="PositionLiteralsFirstInComparisons"
          language="java"
          since="3.3"
          message="对象比较equals请将字面值放在前面"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons"
		  ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons">
        <description>
			字面值与对象做比较的时候，字面值放equals前面，避免NullPointerExcption  
		</description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
  
    
	
	<rule name="ExcessiveClassLength"
          since="0.6"
          message="这个类太长，一般类长度要求保持在2千行以内"
          class="net.sourceforge.pmd.lang.java.rule.design.ExcessiveClassLengthRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_design.html#excessiveclasslength"
		  ref="category/java/design.xml/ExcessiveClassLength">
        <description>
			这个类太长，一般类长度要求保持在2千行以内
        </description>
        <priority>1</priority>
		 <properties>
            <property name="minimum">
                <value>2000</value>
            </property>
        </properties>
    </rule>
	
	
	
	
	
	
	
	

  
    <rule name="UnconditionalIfStatement"
          language="java"
          since="1.5"
          message="不要用if来直接判断true或false，因为判断是没有意义的"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#unconditionalifstatement"
		  ref="category/java/errorprone.xml/UnconditionalIfStatement">
        <description>
			不要用if来直接判断true或false，因为判断是没有意义的
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
	
  
  
  
	<rule name="ExtendsObject"
          language="java"
          since="5.0"
          message="不需要显式地继承Object。"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#extendsobject"
		  ref="category/java/codestyle.xml/ExtendsObject" >
        <description>不需要显式地继承Object。</description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
	
  
  
  
  
    <rule name="ClassCastExceptionWithToArray"
          language="java"
          since="3.4"
          message="这里使用Collection.toArray()将抛出一个ClassCastException的异常"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#classcastexceptionwithtoarray"
		  ref="category/java/errorprone.xml/ClassCastExceptionWithToArray">
        <description>
			这里使用Collection.toArray()将抛出一个ClassCastException的异常.
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
  
  
  
  <rule name="AvoidDecimalLiteralsInBigDecimalConstructor"
          language="java"
          since="3.4"
          message="避免使用float/double接收一个超大(数位超长)的数值，超出范围的，用String来表示"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#avoiddecimalliteralsinbigdecimalconstructor"
		  ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
        <description>
				避免使用float/double接收一个超大(数位超长)的数值，超出范围的，用String来表示  
		</description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
  
  
  
  
  
  
	<rule name="BigIntegerInstantiation"
          since="3.9"
          message="不要创建已经存在的BigInteger和BigDecimal实例(0,1,10)"
          class="net.sourceforge.pmd.lang.java.rule.performance.BigIntegerInstantiationRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_performance.html#bigintegerinstantiation"
		  ref="category/java/performance.xml/BigIntegerInstantiation">
        <description>
			不要创建已经存在的BigInteger和BigDecimal实例(0,1,10)        
		</description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
	<rule name="ReturnFromFinallyBlock"
          language="java"
          since="1.05"
          message="不允许在finally块中通过return返回数据"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#returnfromfinallyblock"
		  ref="category/java/errorprone.xml/ReturnFromFinallyBlock">
        <description>
			不允许在finally块中通过return返回数据
        </description>
        <priority>1</priority>
    </rule>
  
    
  
  
  
  
  
  
  
   <rule name="DontCallThreadRun"
          language="java"
          since="4.3"
          message="不能直接调用Thread的run方法,启动线程，请调用start()"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          typeResolution="true"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_multithreading.html#dontcallthreadrun"
		  ref="category/java/multithreading.xml/DontCallThreadRun" >
        <description>
				不能直接调用Thread的run方法,启动线程，请调用start()"
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  <rule name="DontUseFloatTypeForLoopIndices"
          language="java"
          since="4.3"
          message="不要用float类型做循环指数点"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#dontusefloattypeforloopindices"
		  ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices">
        <description>
			不要用float类型做循环指数点
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
 
  
   <rule name="UnusedFormalParameter"
          language="java"
          since="0.8"
          message="避免传递一个不用的参数到方法中."
          class="net.sourceforge.pmd.lang.java.rule.bestpractices.UnusedFormalParameterRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_bestpractices.html#unusedformalparameter"
		  ref="category/java/bestpractices.xml/UnusedFormalParameter">
        <description>
			避免传递一个不用的参数到方法中
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	<rule name="UnusedLocalVariable"
          language="java"
          since="0.1"
          message="该局部变量从未被使用，如果不用，则不要定义."
          class="net.sourceforge.pmd.lang.java.rule.bestpractices.UnusedLocalVariableRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_bestpractices.html#unusedlocalvariable"
		  ref="category/java/bestpractices.xml/UnusedLocalVariable">
        <description>
			该局部变量从未被使用，如果不用，则不要定义
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	
	<rule name="UseEqualsToCompareStrings"
          language="java"
          since="4.1"
          message="用equals()代替字符串比较的''=='' 或 ''!=''"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#useequalstocomparestrings"
		  ref="category/java/errorprone.xml/UseEqualsToCompareStrings" >
        <description>
				用equals()代替字符串比较的''=='' 或 ''!=''      
		</description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	<rule name="InefficientStringBuffering"
          since="3.4"
          message="避免在StringBuffer/StringBuilder的构造函数和append()方法中做字符拼接，请用append(xx)代替"
          class="net.sourceforge.pmd.lang.java.rule.performance.InefficientStringBufferingRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_performance.html#inefficientstringbuffering"
		  ref="category/java/performance.xml/InefficientStringBuffering">
        <description>
			避免在StringBuffer/StringBuilder的构造函数和append()方法中做字符拼接，请用append(xx)代替        
		</description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	<rule name="AvoidStringBufferField"
          language="java"
          since="4.2"
          message="StringBuffers/StringBuilders 增长非常快，容易导致类存泄漏，不要定义为成员变量"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_bestpractices.html#avoidstringbufferfield"
		  ref="category/java/bestpractices.xml/AvoidStringBufferField">
        <description>
			StringBuffers/StringBuilders 增长非常快，容易导致类存泄漏，不要定义为成员变量
        </description>
        <priority>1</priority>
    </rule>
	
	

	
	
	
	
	
	
	
	<rule name="EmptyStatementBlock"
          language="java"
          since="5.0"
          message="避免空模块"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptystatementblock"
		  ref="category/java/errorprone.xml/EmptyStatementBlock">
        <description>
			避免空模块
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	<rule name="EmptyStatementNotInLoop"
          language="java"
          since="1.5"
          message="An empty statement (semicolon) not part of a loop"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptystatementnotinloop"
		  ref="category/java/errorprone.xml/EmptyStatementNotInLoop">
        <description>
		An empty statement (or a semicolon by itself) that is not used as the sole body of a 'for' 
		or 'while' loop is probably a bug.  It could also be a double semicolon, which has no purpose
		and should be removed.
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	<rule name="EmptySwitchStatements"
          language="java"
          since="1.0"
          message="空的Switch处理"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptyswitchstatements"
		  ref="category/java/errorprone.xml/EmptySwitchStatements">
        <description>
			空的Switch处理
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	<rule name="EmptySynchronizedBlock"
          language="java"
          since="1.3"
          message="空的同步代码块"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptysynchronizedblock"
		  ref="category/java/errorprone.xml/EmptySynchronizedBlock">
        <description>
			空的同步代码块
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	 <rule name="EmptyTryBlock"
          language="java"
          since="0.4"
          message="Avoid empty try blocks"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptytryblock"
		  ref="category/java/errorprone.xml/EmptyTryBlock">
        <description>
			空的try{}catch..毫无意义
        </description>
        <priority>1</priority>
    </rule>
	
  
  
  
  
  
  
  
  
	 <rule name="EmptyWhileStmt"
          language="java"
          since="0.2"
          message="避免无循环体的while循环"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptywhilestmt"
		  ref="category/java/errorprone.xml/EmptyWhileStmt">
        <description>
			避免无循环体的while循环
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
  
  
  
	<rule name="EmptyFinallyBlock"
          language="java"
          since="0.4"
          message="空的finally没有意义"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptyfinallyblock"
		  ref="category/java/errorprone.xml/EmptyFinallyBlock">
        <description>
			空的finally没有意义
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
		
	
	<rule name="EmptyIfStmt"
          language="java"
          since="0.1"
          message="没做任何处理的空if判断，没有意义"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptyifstmt"
		  ref="category/java/errorprone.xml/EmptyIfStmt">
        <description>
			没做任何处理的空if判断，没有意义
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
	
	<rule name="EmptyInitializer"
          language="java"
          since="5.0"
          message="Empty initializer was found"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#emptyinitializer"
		  ref="category/java/errorprone.xml/EmptyInitializer">
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
  
   <rule name="IntegerInstantiation"
          language="java"
          since="3.5"
          message="不要初始化Integer对象，调用Integer.valueOf()代替"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          typeResolution="true"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_performance.html#integerinstantiation"
		  ref="category/java/performance.xml/IntegerInstantiation">
        <description>
			不要初始化Integer对象，调用Integer.valueOf()代替
        </description>
        <priority>1</priority>
    </rule>
  
  
  
  
  
  
  
  

  
  
  <rule name="UnnecessaryConstructor"
          language="java"
          since="1.0"
          message="这是一个没有必要的构造函数，编译器会生成这个相同的构造函数"
          class="net.sourceforge.pmd.lang.java.rule.codestyle.UnnecessaryConstructorRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#unnecessaryconstructor"
		  ref="category/java/codestyle.xml/UnnecessaryConstructor">
        <description>
			这是一个没有必要的构造函数，编译器会生成这个相同的构造函数       
		</description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	 <rule name="UnnecessaryReturn"
          since="1.3"
          message="这个return是没有必要的"
          class="net.sourceforge.pmd.lang.java.rule.codestyle.UnnecessaryReturnRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#unnecessaryreturn"
		  ref="category/java/codestyle.xml/UnnecessaryReturn">
        <description>
				这个return是没有必要的
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	
	<rule name="DuplicateImports"
          since="0.5"
          message="重复引入包"
          class="net.sourceforge.pmd.lang.java.rule.codestyle.DuplicateImportsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#duplicateimports"
		  ref="category/java/codestyle.xml/DuplicateImports">
        <description>
			重复引入包
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	<rule name="UnusedNullCheckInEquals"
          language="java"
          since="3.5"
          message="当知道一个对象一定不为null的时候，做比较可以将该对象放在equals的前面：例如xx我们知道不为null，可用xx.equals(ff)"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#unusednullcheckinequals"
		  ref="category/java/errorprone.xml/UnusedNullCheckInEquals"
		  >
        <description>
			当知道一个对象一定不为null的时候，做比较可以将该对象放在equals的前面：例如xx我们知道不为null，可用xx.equals(ff)
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	
	
	
	
	
	
	<rule name="ForLoopsMustUseBraces"
          language="java"
          since="0.7"
          deprecated="true"
          message="for循环必须使用大括号"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#forloopsmustusebraces"
		  ref="category/java/codestyle.xml/ForLoopsMustUseBraces">
        <description>
				for循环必须使用大括号
        </description>
        <priority>1</priority>
    </rule>

	
	
	
	
	
	
	 <rule name="IfElseStmtsMustUseBraces"
          language="java"
          since="0.2"
          deprecated="true"
          message="If..else..判断必须使用大括号"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces"
		  ref="category/java/codestyle.xml/IfElseStmtsMustUseBraces">
        <description>
				If..else..判断必须使用大括号
        </description>
        <priority>1</priority>
    </rule>
	
	
	
	
	
	<rule name="IfStmtsMustUseBraces"
          language="java"
          since="1.0"
          deprecated="true"
          message="If判断必须使用大括号"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_codestyle.html#ifstmtsmustusebraces"
		  ref="category/java/codestyle.xml/IfStmtsMustUseBraces">
        <description>
			If判断必须使用大括号
        </description>
        <priority>1</priority>
    </rule>

  
  

   <rule name="MisplacedNullCheck"
          language="java"
          since="3.5"
          message="这里的null检查放错了地方；如果变量为null，则会出现NullPointerException"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_java_errorprone.html#misplacednullcheck" 
		  ref="category/java/errorprone.xml/MisplacedNullCheck">
        <priority>1</priority>
    </rule>




   <exclude-pattern>.*/*Test*.*</exclude-pattern>
   <exclude-pattern>.*/test/.*</exclude-pattern>
   <exclude-pattern>.*/R.java</exclude-pattern>
   <exclude-pattern>.*/BuildConfig.java</exclude-pattern>
   <exclude-pattern>.*/gen/.*</exclude-pattern>
  
</ruleset>